{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/Wild Code School/project-advent_calendar/Hackathon_front_Calendar/src/components/MovieForm.js\";\nimport React from 'react';\n\nconst cors = require('cors');\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmission = event => {\n      event.preventDefault(); // on va plutôt redéfinir plus bas la façon d'envoyer les datas.\n\n      console.log(\"On est dans l'application formulaire\");\n      let formm = event.target;\n      console.log(formm);\n      const dataform = new FormData(formm); // convertit la cible (bout de DOM )\n\n      console.log(dataform, JSON.stringify(dataform));\n      console.log(\"year sent : \" + dataform.get(\"year\")); // visit la cible avec la valeur de name (du input ici).\n\n      let opCors = {\n        methods: 'Post'\n      };\n      fetch('http://localhost:5000/api/movies', {\n        // On créée ici l'adresse URL puis on va ensuite aller paramétrer le serveur.\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        // this.dataform,\n        headers: {\n          'Content-Type': 'application/json'\n        } //Précise le type de data envoyé vers le serveur.\n\n      });\n    };\n\n    this.handleInput = event => {\n      // Met à jour le contenu en direct tq le texte en entrée est rendu après passage dans le state pour être affiché.\n      console.log(\"changing input value...\");\n      this.setState({\n        [event.target.name]: event.target.value\n      }); //console.log(event.target.name, event.target.value);\n    };\n\n    this.state = {\n      title: '',\n      year: '',\n      director: ''\n    };\n  }\n\n  render() {\n    let film = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmission,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Titre\"), React.createElement(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      placeholder: \"Votre titre?\",\n      value: film.title,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Ann\\xE9e\"), React.createElement(\"input\", {\n      id: \"year\",\n      name: \"year\",\n      type: \"number\",\n      placeholder: \"Ann\\xE9e de sortie\",\n      value: film.year,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"R\\xE9alisateur\"), React.createElement(\"input\", {\n      id: \"director\",\n      name: \"director\",\n      type: \"text\",\n      placeholder: \"C\\xE9l\\xE8bre?(Lol)\",\n      value: film.director,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Enregistrer le film\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"y\")));\n  }\n\n}\n\n;\nexport default MovieForm;","map":{"version":3,"sources":["/home/wilder/Documents/Wild Code School/project-advent_calendar/Hackathon_front_Calendar/src/components/MovieForm.js"],"names":["React","cors","require","MovieForm","Component","constructor","props","handleSubmission","event","preventDefault","console","log","formm","target","dataform","FormData","JSON","stringify","get","opCors","methods","fetch","method","body","state","headers","handleInput","setState","name","value","title","year","director","render","film"],"mappings":"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","sourcesContent":["import React from 'react';\nconst cors = require('cors');\n\nclass MovieForm extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n                title:'',\n                year:'',\n                director:''\n        }\n    }\n\n    handleSubmission = (event) => {\n        event.preventDefault(); // on va plutôt redéfinir plus bas la façon d'envoyer les datas.\n            console.log(\"On est dans l'application formulaire\");\n        let formm = event.target;\n            console.log(formm);\n        const dataform = new FormData (formm); // convertit la cible (bout de DOM )\n            console.log(dataform, JSON.stringify(dataform));\n            console.log(\"year sent : \"+ dataform.get(\"year\")); // visit la cible avec la valeur de name (du input ici).\n        \n        let opCors = { methods: 'Post'}\n\n        fetch('http://localhost:5000/api/movies', { // On créée ici l'adresse URL puis on va ensuite aller paramétrer le serveur.\n          method: 'POST' ,\n          body: JSON.stringify(this.state), // this.dataform,\n          headers: {'Content-Type':'application/json' } //Précise le type de data envoyé vers le serveur.\n          \n        })\n    }\n\n    handleInput = (event) => {  // Met à jour le contenu en direct tq le texte en entrée est rendu après passage dans le state pour être affiché.\n        console.log(\"changing input value...\")\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n            //console.log(event.target.name, event.target.value);\n    }\n\n    render() {\n        let film = this.state;\n\n        return (\n\n            <div>\n                <form onSubmit={this.handleSubmission} >\n                    <label htmlFor=\"title\">Titre</label>\n                    <input \n                        id=\"title\" name=\"title\" \n                        type=\"text\" placeholder=\"Votre titre?\" \n                        value ={film.title} onChange={this.handleInput}\n                    />\n                    <label htmlFor=\"year\">Année</label>\n                    <input \n                        id=\"year\" name=\"year\" \n                        type=\"number\" placeholder=\"Année de sortie\" \n                        value={film.year} onChange={this.handleInput}\n                    />\n                    <label htmlFor=\"director\">Réalisateur</label>\n                    <input \n                        id=\"director\" name=\"director\" \n                        type=\"text\" placeholder=\"Célèbre?(Lol)\" \n                        value={film.director} onChange={this.handleInput}\n                    />\n                    <button>Enregistrer le film</button>\n                    <p>y</p>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default MovieForm;"]},"metadata":{},"sourceType":"module"}